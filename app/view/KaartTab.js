/*
 * File: app/view/KaartTab.js
 *
 * This file was generated by Sencha Architect version 3.5.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('GeZC_StartAdministratie.view.KaartTab', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.kaarttab',

    requires: [
        'Ext.resizer.Splitter',
        'Ext.grid.Panel',
        'Ext.grid.column.Column',
        'Ext.grid.View',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button'
    ],

    hidden: true,
    id: 'KaartTab',
    title: 'Kaart',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'container',
                    minHeight: 200,
                    layout: {
                        type: 'hbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'panel',
                            flex: 5,
                            html: '<div style="width:100%; height:100%" id="map"></div>',
                            id: 'mapPanel',
                            minHeight: 100,
                            width: 150,
                            layout: 'fit',
                            frameHeader: false
                        },
                        {
                            xtype: 'splitter'
                        },
                        {
                            xtype: 'gridpanel',
                            flex: 1,
                            maxWidth: 170,
                            frameHeader: false,
                            hideHeaders: true,
                            store: 'FlarmPosities_Store',
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        var ret = "<b>" + value + "</b><br>";
                                        ret = ret + "<table><tr>"
                                        ret = ret + "<td width=50px>" + record.data.SPEED + " km/h </td>";
                                        ret = ret + "<td width=40px>" + record.data.VERTICAL + " m </td>";
                                        ret = ret + "<td width=30px>" + record.data.ROC + " m/s </td>";
                                        ret = ret + "</tr></table>";

                                        return ret;
                                    },
                                    dataIndex: 'REG_CALL',
                                    text: 'Registratie',
                                    flex: 1
                                }
                            ]
                        }
                    ]
                }
            ],
            listeners: {
                afterrender: {
                    fn: me.onKaartTabAfterRender,
                    scope: me
                },
                resize: {
                    fn: me.onKaartTabResize,
                    scope: me
                }
            },
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'bottom',
                    items: [
                        {
                            xtype: 'button',
                            id: 'FilterOnderdrukKistenOpdeGrond',
                            enableToggle: true,
                            icon: 'images/filter.png',
                            text: 'Filter',
                            listeners: {
                                toggle: {
                                    fn: me.onFilterOnderdrukKistenOpdeGrondToggle,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onKaartTabAfterRender: function(component, eOpts) {
        var KaartTab = Ext.getCmp("KaartTab");
        var mapPanel = Ext.getCmp("mapPanel");

        mapPanel.setHeight(KaartTab.getHeight());
        InitializeKaart();
    },

    onKaartTabResize: function(component, adjWidth, adjHeight, eOpts) {
        var KaartTab = Ext.getCmp("KaartTab");
        var mapPanel = Ext.getCmp("mapPanel");

        mapPanel.setHeight(KaartTab.getHeight());
        ResizeKaart();
    },

    onFilterOnderdrukKistenOpdeGrondToggle: function(button, pressed, eOpts) {
        // Verwijder alle vliegtuigen van de kaart
        ClearMarkers();

        // Als de knop FILTER is veranderd dan opnieuw laden van de store. Gevolg is dat de lijst
        // met vliegtuigen ververst wordt. Door Push = true wordt door de server ook alle vliegtuigen
        // verstuurd op de websocket. Gevolgs is dat de kaart ook aangepast wordt
        var store = Ext.data.StoreManager.lookup('FlarmPosities_Store');
        store.load({
            params:
            {
                'Push':true
            }
        });

    }

});