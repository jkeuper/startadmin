/*
 * File: app/view/ControleDagOverzichtTab.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('GeZC_StartAdministratie.view.ControleDagOverzichtTab', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.DagOverzichtTab',

    requires: [
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.grid.column.Column'
    ],

    id: 'DagOverzichtTab',
    title: 'Dag overzicht',

    layout: {
        type: 'vbox',
        align: 'stretch'
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'gridpanel',
                    flex: 1,
                    id: 'ControleDagOverzicht',
                    enableColumnHide: false,
                    store: 'ControleDagOverzicht_GridStore',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                metaData.tdAttr = 'data-qtip="Bekijk details"';

                                var retValue = "<a href=javascript:Ext.Controle.OpenControleDetailsWindow(" + record.data.ID + ");>" + value + "</a>";


                                return retValue;
                            },
                            maxWidth: 250,
                            width: 200,
                            dataIndex: 'NAAM',
                            text: 'Naam',
                            flex: 3
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                if (value == "0")
                                {
                                    return "-"
                                }
                                return value;
                            },
                            maxWidth: 100,
                            dataIndex: 'STARTS',
                            text: 'Starts',
                            flex: 1
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                if (value == "0")
                                {
                                    return "-"
                                }
                                return value;
                            },
                            maxWidth: 100,
                            dataIndex: 'VLIEGER',
                            text: 'Voorin',
                            flex: 1
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                if (value == "0")
                                {
                                    return "-"
                                }
                                return value;
                            },
                            maxWidth: 100,
                            dataIndex: 'INZITTENDE',
                            text: 'Achterin',
                            flex: 1
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                if (value == "0")
                                {
                                    return "-"
                                }
                                return value;
                            },
                            maxWidth: 100,
                            dataIndex: 'DDWV',
                            text: 'DDWV',
                            flex: 1
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                if (value == "0")
                                {
                                    return "-"
                                }
                                return value;
                            },
                            maxWidth: 100,
                            dataIndex: 'SLEEP',
                            text: 'Sleep',
                            flex: 1
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                if (value == "0")
                                {
                                    return "-"
                                }
                                return value;

                            },
                            maxWidth: 100,
                            dataIndex: 'OPREKENING',
                            text: 'Op rekening',
                            flex: 1
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'OPMERKING',
                            text: 'Opmerkingen',
                            flex: 5
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});