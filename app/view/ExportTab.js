/*
 * File: app/view/ExportTab.js
 *
 * This file was generated by Sencha Architect version 3.5.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('GeZC_StartAdministratie.view.ExportTab', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.exporttab',

    requires: [
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.toolbar.Paging',
        'Ext.form.field.Date',
        'Ext.resizer.Splitter',
        'Ext.form.field.Checkbox',
        'Ext.button.Button',
        'Ext.grid.column.Column'
    ],

    title: 'Startlijst',

    layout: {
        type: 'hbox',
        align: 'stretch'
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'gridpanel',
                    flex: 1,
                    id: 'StartlijstExportGrid',
                    title: '',
                    enableColumnHide: false,
                    enableColumnMove: false,
                    forceFit: false,
                    store: 'Export_GridStore',
                    viewConfig: {
                        id: 'StartlijstExportView',
                        minHeight: 20,
                        emptyText: '<div class="noData" ></div>'
                    },
                    dockedItems: [
                        {
                            xtype: 'pagingtoolbar',
                            dock: 'bottom',
                            height: 32,
                            id: 'Export_Bladwijzer',
                            afterPageText: 'van {0}',
                            beforePageText: 'Pagina',
                            displayInfo: true,
                            displayMsg: 'Weergave {0} - {1} tot {2}',
                            emptyMsg: 'Geen data aanwezig',
                            firstText: 'Eerste pagina',
                            lastText: 'Laatste pagina',
                            nextText: 'Volgende pagina',
                            prevText: 'Vorige pagina',
                            refreshText: 'Verversen',
                            store: 'Export_GridStore'
                        },
                        {
                            xtype: 'toolbar',
                            dock: 'bottom',
                            id: 'VandaagToolbar2',
                            items: [
                                {
                                    xtype: 'datefield',
                                    id: 'Export.DatumVanaf',
                                    width: 150,
                                    fieldLabel: 'Vanaf',
                                    labelAlign: 'right',
                                    labelWidth: 40,
                                    listeners: {
                                        change: {
                                            fn: me.onDatumVanafChange,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'datefield',
                                    id: 'Export.DatumTot',
                                    width: 150,
                                    fieldLabel: 'T/m',
                                    labelAlign: 'right',
                                    labelWidth: 40,
                                    listeners: {
                                        change: {
                                            fn: me.onDatumTotChange,
                                            scope: me
                                        }
                                    }
                                },
                                me.processExportZoeken({
                                    xtype: 'textfield',
                                    flex: 1,
                                    id: 'Export.Zoeken',
                                    maxWidth: 300,
                                    fieldLabel: 'Zoeken',
                                    labelAlign: 'right',
                                    listeners: {
                                        render: {
                                            fn: me.onZoekenStartlijstRender,
                                            scope: me
                                        },
                                        change: {
                                            fn: me.Export_ZoekenChange,
                                            delay: 250,
                                            scope: me
                                        }
                                    }
                                }),
                                {
                                    xtype: 'splitter',
                                    width: 30
                                },
                                {
                                    xtype: 'checkboxfield',
                                    id: 'Export_ClubkistFilter',
                                    width: 100,
                                    fieldLabel: '',
                                    labelWidth: 0,
                                    boxLabel: 'Clubkisten',
                                    listeners: {
                                        change: {
                                            fn: me.Export_ClubkistFilterChange,
                                            delay: 500,
                                            buffer: 500,
                                            scope: me
                                        },
                                        render: {
                                            fn: me.onExportClubkistFilterRender,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'splitter',
                                    flex: 1
                                },
                                {
                                    xtype: 'button',
                                    id: 'ExporteerButton',
                                    icon: 'images/icon_export.gif',
                                    text: 'Exporteer',
                                    listeners: {
                                        click: {
                                            fn: me.onExporteerButtonClick,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        }
                    ],
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'DATUM',
                            text: 'Datum'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                var retVal = value;

                                if (record.data.VLIEGERNAAM !== null)
                                {
                                    retVal = value + "(" + record.data.VLIEGERNAAM + ")";
                                }
                                return retVal;
                            },
                            dataIndex: 'VLIEGERNAAM_LID',
                            text: 'VliegerNaam'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'VLIEGERLIDNR',
                            text: 'VliegerLidnr'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'VLIEGERLIDTYPE',
                            text: 'VliegerLidType'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                var retVal = value;

                                if (record.data.INZITTENDENAAM !== null)
                                {
                                    if (record.data.INZITTENDENAAM.length > 0)
                                    retVal = record.data.INZITTENDENAAM;
                                }


                                return retVal;
                            },
                            dataIndex: 'INZITTENDENAAM_LID',
                            text: 'Inzittende'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'INZTTENDELIDNR',
                            text: 'InzittendeLidnr'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'INZITTENDELIDTYPE',
                            text: 'InzittendeLidType'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'REGISTRATIE',
                            text: 'Registratie'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'CALLSIGN',
                            text: 'Callsign'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'STARTTIJD',
                            text: 'Starttijd'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'LANDINGSTIJD',
                            text: 'Landingstijd'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'DUUR',
                            text: 'Duur'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'OPMERKING',
                            text: 'Opmerking'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'STARTMETHODE',
                            text: 'Startmethode'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'BETAALDDOOR',
                            text: 'BetaaldDoor'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'BETAALDLIDNR',
                            text: 'BetaaldLidnr'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'SOORTVLUCHT',
                            text: 'SoortVlucht'
                        },
                        {
                            xtype: 'gridcolumn',
                            id: 'Baan',
                            dataIndex: 'BAAN',
                            text: 'Baan'
                        }
                    ],
                    listeners: {
                        itemdblclick: {
                            fn: me.onStartlijstExportGridItemDblClick,
                            scope: me
                        }
                    }
                }
            ],
            listeners: {
                afterrender: {
                    fn: me.onPanelAfterRender,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    processExportZoeken: function(config) {
        config.plugins = ['clearbutton'];
        return config;
    },

    onDatumVanafChange: function(field, newValue, oldValue, eOpts) {
        Ext.Hoofdscherm.ToonExportGrid();
    },

    onDatumTotChange: function(field, newValue, oldValue, eOpts) {
        Ext.Hoofdscherm.ToonExportGrid();
    },

    onZoekenStartlijstRender: function(component, eOpts) {
        Ext.QuickTips.register({
            target: component.getEl(),
            text: 'Zoek in de startlijst. Bijvoorbeeld op naam, registratie of callsign'
        });
    },

    Export_ZoekenChange: function(field, newValue, oldValue, eOpts) {
        Ext.Hoofdscherm.ToonExportGrid();
    },

    Export_ClubkistFilterChange: function(field, newValue, oldValue, eOpts) {
        Ext.Hoofdscherm.ToonExportGrid();
    },

    onExportClubkistFilterRender: function(component, eOpts) {
        Ext.QuickTips.register({
            target: component.getEl(),
            text: 'Laat alleen de vliegtuigen van de club in het overzicht zien.'
        });
    },

    onExporteerButtonClick: function(button, e, eOpts) {
        Ext.Hoofdscherm.onExporteerButtonClick(button, e, eOpts);
    },

    onStartlijstExportGridItemDblClick: function(dataview, record, item, index, e, eOpts) {
        Ext.Hoofdscherm.StartlijstExport_GridviewItemDblClick(dataview, record, item, index, e, eOpts);
    },

    onPanelAfterRender: function(component, eOpts) {
        Ext.Hoofdscherm.ToonExportGrid();
    }

});