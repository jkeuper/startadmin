/*
 * File: app/store/VliegtuigLogboek_Store.js
 *
 * This file was generated by Sencha Architect version 3.5.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('GeZC_StartAdministratie.store.VliegtuigLogboek_Store', {
    extend: 'Ext.data.Store',

    requires: [
        'GeZC_StartAdministratie.model.Startlijst_VliegtuigLogboekModel',
        'Ext.data.proxy.Ajax',
        'Ext.data.reader.Json'
    ],

    constructor: function(cfg) {
        var me = this;
        cfg = cfg || {};
        me.callParent([Ext.apply({
            autoSync: true,
            model: 'GeZC_StartAdministratie.model.Startlijst_VliegtuigLogboekModel',
            storeId: 'VliegtuigLogboek_Store',
            remoteSort: true,
            proxy: {
                type: 'ajax',
                simpleSortMode: true,
                url: 'php/main.php?Action=Startlijst.VliegtuigLogboekJSON',
                reader: {
                    type: 'json',
                    idProperty: 'ID',
                    root: 'results'
                },
                listeners: {
                    exception: {
                        fn: me.onAjaxproxyException,
                        scope: me
                    }
                }
            },
            listeners: {
                load: {
                    fn: me.onJsonstoreLoad,
                    scope: me
                },
                beforeload: {
                    fn: me.onJsonstoreBeforeLoad,
                    scope: me
                }
            }
        }, cfg)]);
    },

    onAjaxproxyException: function(proxy, response, operation, eOpts) {
        HandleStoreLoadException(proxy, response, operation, eOpts);	// toon de gebruiker dat er een fout is opgetreden
    },

    onJsonstoreLoad: function(store, records, successful, operation, eOpts) {
        if (store.count() === 0)
        {
            Ext.getCmp('ClubKistenLogDetails').setTitle("");
        }
        else
        {
            Ext.getCmp('ClubKistenLogDetails').setTitle(store.getAt(0).data.REG_CALL);
        }

        Ext.win.showLoading(false, store.storeId);	// verwijder window met melding van "ophalen data"

        // toon hoe veel tijd nodig is geweest voor het laden
        console.log(sprintf("%s: storeLoad storeId=%s processing time=%d msec", TijdStempel(), store.storeId, (new Date().getTime() - Ext.data.storeLoadStart[store.storeId])));
    },

    onJsonstoreBeforeLoad: function(store, operation, eOpts) {

        Ext.data.storeLoadStart[store.storeId] = new Date().getTime();	// zet een begintijd om de performance te meten

        if (Ext.getCmp('LogboekVliegtuigID') !== undefined)
        {
            var vliegtuigID = Ext.getCmp('LogboekVliegtuigID').getValue();
            if (vliegtuigID !== null)
            {
                store.getProxy().setExtraParam('_:logboekVliegtuigID', vliegtuigID);
            }
        }

        if (Ext.getCmp('LogboekDatumVanaf') !== undefined)
        {
            var LogboekDatumVanaf = Ext.getCmp('LogboekDatumVanaf').getValue();
            if (LogboekDatumVanaf !== null)
            {
                var d = sprintf("%s-%s-%s", LogboekDatumVanaf.getFullYear(), LogboekDatumVanaf.getMonth()+1, LogboekDatumVanaf.getDate());
                store.getProxy().setExtraParam('_:logboekDatumVanaf', d);
            }
        }
        if (Ext.getCmp('LogboekDatumTot') !== undefined)
        {
            var LogboekDatumTot = Ext.getCmp('LogboekDatumTot').getValue();
            if (LogboekDatumTot !== null)
            {
                var d = sprintf("%s-%s-%s", LogboekDatumTot.getFullYear(), LogboekDatumTot.getMonth()+1, LogboekDatumTot.getDate());
                store.getProxy().setExtraParam('_:logboekDatumTot', d);
            }
        }
    }

});